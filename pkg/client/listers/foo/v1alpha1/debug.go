/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/indradhanush/debug-operator/pkg/apis/foo/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DebugLister helps list Debugs.
type DebugLister interface {
	// List lists all Debugs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Debug, err error)
	// Get retrieves the Debug from the index for a given name.
	Get(name string) (*v1alpha1.Debug, error)
	DebugListerExpansion
}

// debugLister implements the DebugLister interface.
type debugLister struct {
	indexer cache.Indexer
}

// NewDebugLister returns a new DebugLister.
func NewDebugLister(indexer cache.Indexer) DebugLister {
	return &debugLister{indexer: indexer}
}

// List lists all Debugs in the indexer.
func (s *debugLister) List(selector labels.Selector) (ret []*v1alpha1.Debug, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Debug))
	})
	return ret, err
}

// Get retrieves the Debug from the index for a given name.
func (s *debugLister) Get(name string) (*v1alpha1.Debug, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("debug"), name)
	}
	return obj.(*v1alpha1.Debug), nil
}
